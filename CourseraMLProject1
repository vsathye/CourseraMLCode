This code was written as part of a coursera course about machine learning in python.

import numpy as np
import pandas as pd
from sklearn.datasets import load_breast_cancer

cancer = load_breast_cancer()

print(cancer.DESCR) # Print the data set description

#################################################################################################
def answer_one():
    datfram = pd.DataFrame(data = cancer['data'], columns = cancer['feature_names'])
    datfram['target'] = cancer['target']
    return datfram


answer_one()

#################################################################################################
def answer_two():
    cancerdf = answer_one()
    malcount = 0
    bencount = 0
    for index,row in cancerdf.iterrows():
        if(row[30] == 0):
            malcount += 1
        else:
            bencount += 1
    
    return pd.Series(data = [malcount, bencount], index = ['malignant', 'benign'])


answer_two()

#################################################################################################

def answer_three():
    cancerdf = answer_one()
    
    X = cancerdf[cancerdf.columns[:-1]]
    y = cancerdf['target']
    return X, y

answer_three()

#################################################################################################

from sklearn.model_selection import train_test_split

def answer_four():
    X, y = answer_three()
    
    X_train, X_test, y_train, y_test = train_test_split(X,y, train_size = 426, test_size = 143, random_state = 0)
    return X_train, X_test, y_train, y_test

answer_four()

#################################################################################################

from sklearn.neighbors import KNeighborsClassifier

def answer_five():
    X_train, X_test, y_train, y_test = answer_four()
    
    knn = KNeighborsClassifier(n_neighbors = 1)
    knn.fit(X_train,y_train)
    return knn

answer_five()

#################################################################################################

def answer_six():
    cancerdf = answer_one()
    means = cancerdf.mean()[:-1].values.reshape(1, -1)
    knn = answer_five()
    return knn.predict(means).astype(float)# Return your answer

answer_six()

#################################################################################################

def answer_seven():
    X_train, X_test, y_train, y_test = answer_four()
    knn = answer_five()
    
    
    
    return knn.predict(X_test).astype(float)# Return your answer

answer_seven()

#################################################################################################

def answer_eight():
    X_train, X_test, y_train, y_test = answer_four()
    knn = answer_five()
    
    # Your code here
    
    return knn.score(X_test,y_test)# Return your answer

answer_eight()
